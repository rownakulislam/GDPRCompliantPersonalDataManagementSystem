{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:\\thesis_project_start\\Ethereum-DappV2\\node_modules\\@libp2p\\interface\\src\\record\\index.ts"],"sourcesContent":["import type { PeerId } from '../peer-id/index.js'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\n/**\n * Record is the base implementation of a record that can be used as the payload of a libp2p envelope.\n */\nexport interface Record {\n  /**\n   * signature domain.\n   */\n  domain: string\n  /**\n   * identifier of the type of record\n   */\n  codec: Uint8Array\n  /**\n   * Marshal a record to be used in an envelope.\n   */\n  marshal(): Uint8Array\n  /**\n   * Verifies if the other provided Record is identical to this one.\n   */\n  equals(other: Record): boolean\n}\n\nexport interface Envelope {\n  peerId: PeerId\n  payloadType: Uint8Array | Uint8ArrayList\n  payload: Uint8Array\n  signature: Uint8Array | Uint8ArrayList\n\n  marshal(): Uint8Array\n  validate(domain: string): Promise<boolean>\n  equals(other: Envelope): boolean\n}\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}