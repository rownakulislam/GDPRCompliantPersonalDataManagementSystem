{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:\\thesis_project_start\\Ethereum-DappV2\\node_modules\\@libp2p\\interface\\src\\topology\\index.ts"],"sourcesContent":["import type { Connection } from '../connection/index.js'\nimport type { PeerId } from '../peer-id/index.js'\n\nexport interface Topology {\n  /**\n   * If true, invoke `onConnect` for this topology on transient (e.g. short-lived\n   * and/or data-limited) connections. (default: false)\n   */\n  notifyOnTransient?: boolean\n\n  /**\n   * Invoked when a new connection is opened to a peer that supports the\n   * registered protocol\n   */\n  onConnect?(peerId: PeerId, conn: Connection): void\n\n  /**\n   * Invoked when the last connection to a peer that supports the registered\n   * protocol closes\n   */\n  onDisconnect?(peerId: PeerId): void\n}\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}