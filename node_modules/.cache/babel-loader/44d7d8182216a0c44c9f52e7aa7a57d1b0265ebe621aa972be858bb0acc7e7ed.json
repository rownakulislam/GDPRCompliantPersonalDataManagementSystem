{"ast":null,"code":"var _jsxFileName = \"C:\\\\thesis_project_start\\\\Ethereum-DappV2\\\\src\\\\View.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport { create } from 'ipfs-http-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = create({\n  host: '127.0.0.1',\n  port: 5001,\n  protocol: 'http'\n});\nfunction ViewComponent() {\n  _s();\n  const [userAddress, setUserAddress] = useState('');\n  const [fileUrls, setFileUrls] = useState([]);\n  const [filelogs, setFileLogs] = useState([]);\n  //const [recipientAddress, setRecipientAddress] = useState('');\n\n  const CONTRACT_ADDRESS = process.env.REACT_APP_CONTRACT_ADDRESS;\n  const API_KEY = process.env.REACT_APP_API_KEY;\n  const PRIVATE_KEYA = process.env.REACT_APP_PRIVATE_KEY_A;\n  const PRIVATE_KEY1 = process.env.REACT_APP_PRIVATE_KEY_1;\n  const network = 'maticmum';\n  const provider = new ethers.providers.AlchemyProvider(network, API_KEY);\n  const signer = new ethers.Wallet(PRIVATE_KEY1, provider);\n  const contractABI = require('./abis/Temp.json');\n  const contract = new ethers.Contract(CONTRACT_ADDRESS, contractABI, signer);\n  async function fetchFileFromIPFS() {\n    try {\n      console.log(\"here\");\n      var d = new Date();\n      d = new Date(d.getTime() - 3000000);\n      var date_format_str = d.getFullYear().toString() + \"-\" + ((d.getMonth() + 1).toString().length == 2 ? (d.getMonth() + 1).toString() : \"0\" + (d.getMonth() + 1).toString()) + \"-\" + (d.getDate().toString().length == 2 ? d.getDate().toString() : \"0\" + d.getDate().toString()) + \" \" + (d.getHours().toString().length == 2 ? d.getHours().toString() : \"0\" + d.getHours().toString()) + \":\" + ((parseInt(d.getMinutes() / 5) * 5).toString().length == 2 ? (parseInt(d.getMinutes() / 5) * 5).toString() : \"0\" + (parseInt(d.getMinutes() / 5) * 5).toString()) + \":00\";\n      console.log(date_format_str);\n      const transactionObj1 = await contract.getUserData(userAddress, date_format_str);\n      const temp = await transactionObj1.wait();\n      const userData = temp.events[0].args._cid;\n      console.log(userData);\n      let urls = [];\n      let logs = [];\n      for (var i = 0; i < userData.length; i++) {\n        const stream = client.cat(userData[i].toString());\n        let data = [];\n        for await (const chunk of stream) {\n          data.push(chunk);\n        }\n        const blob = new Blob(data, {\n          type: 'image/jpeg'\n        });\n        const url = URL.createObjectURL(blob);\n        urls.push({\n          cid: userData[i],\n          url: url\n        });\n        const lastAccessor = await contract.getLastAccessor(userData[i].toString());\n        logs.push({\n          cid: userData[i],\n          accessed_by: lastAccessor.user,\n          time: lastAccessor.time,\n          granted: lastAccessor.granted\n        });\n      }\n      setFileUrls(urls);\n      setFileLogs(logs);\n    } catch (error) {\n      console.error('Error fetching file from IPFS:', error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Your Address\",\n      onChange: e => setUserAddress(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchFileFromIPFS,\n      children: \"Fetch Files from IPFS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), fileUrls.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"CID: \", file.cid]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: file.url,\n        download: true,\n        children: \"Download File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)), filelogs.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"CID: \", file.cid]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"LOG: \", file.accessed_by]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"LOG: \", file.time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"LOG: \", file.granted]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(ViewComponent, \"Qb+pl2hiw/XUZTkWT0r8HYP1onk=\");\n_c = ViewComponent;\nexport default ViewComponent;\nvar _c;\n$RefreshReg$(_c, \"ViewComponent\");","map":{"version":3,"names":["React","useState","ethers","create","jsxDEV","_jsxDEV","client","host","port","protocol","ViewComponent","_s","userAddress","setUserAddress","fileUrls","setFileUrls","filelogs","setFileLogs","CONTRACT_ADDRESS","process","env","REACT_APP_CONTRACT_ADDRESS","API_KEY","REACT_APP_API_KEY","PRIVATE_KEYA","REACT_APP_PRIVATE_KEY_A","PRIVATE_KEY1","REACT_APP_PRIVATE_KEY_1","network","provider","providers","AlchemyProvider","signer","Wallet","contractABI","require","contract","Contract","fetchFileFromIPFS","console","log","d","Date","getTime","date_format_str","getFullYear","toString","getMonth","length","getDate","getHours","parseInt","getMinutes","transactionObj1","getUserData","temp","wait","userData","events","args","_cid","urls","logs","i","stream","cat","data","chunk","push","blob","Blob","type","url","URL","createObjectURL","cid","lastAccessor","getLastAccessor","accessed_by","user","time","granted","error","children","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","file","index","href","download","_c","$RefreshReg$"],"sources":["C:/thesis_project_start/Ethereum-DappV2/src/View.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport { create } from 'ipfs-http-client';\r\n\r\nconst client = create({\r\n  host: '127.0.0.1',\r\n  port: 5001,\r\n  protocol: 'http',\r\n});\r\n\r\nfunction ViewComponent() {\r\n  const [userAddress, setUserAddress] = useState('');\r\n  const [fileUrls, setFileUrls] = useState([]);\r\n  const [filelogs, setFileLogs] = useState([]);\r\n  //const [recipientAddress, setRecipientAddress] = useState('');\r\n\r\n  const CONTRACT_ADDRESS = process.env.REACT_APP_CONTRACT_ADDRESS;  \r\n  const API_KEY = process.env.REACT_APP_API_KEY;\r\n  const PRIVATE_KEYA=process.env.REACT_APP_PRIVATE_KEY_A;\r\n  const PRIVATE_KEY1=process.env.REACT_APP_PRIVATE_KEY_1;\r\n\r\n\r\n  const network = 'maticmum';\r\n  const provider = new ethers.providers.AlchemyProvider(network, API_KEY);\r\n  const signer = new ethers.Wallet(PRIVATE_KEY1, provider);\r\n\r\n  \r\n\r\n\r\n  const contractABI = require('./abis/Temp.json');\r\n  const contract = new ethers.Contract(CONTRACT_ADDRESS, contractABI, signer);\r\n\r\n  async function fetchFileFromIPFS() {\r\n    try {\r\n      console.log(\"here\");\r\n      var d = new Date();\r\n      d = new Date(d.getTime() - 3000000);\r\n      var date_format_str = d.getFullYear().toString()+\"-\"+((d.getMonth()+1).toString().length==2?(d.getMonth()+1).toString():\"0\"+(d.getMonth()+1).toString())+\"-\"+(d.getDate().toString().length==2?d.getDate().toString():\"0\"+d.getDate().toString())+\" \"+(d.getHours().toString().length==2?d.getHours().toString():\"0\"+d.getHours().toString())+\":\"+((parseInt(d.getMinutes()/5)*5).toString().length==2?(parseInt(d.getMinutes()/5)*5).toString():\"0\"+(parseInt(d.getMinutes()/5)*5).toString())+\":00\";\r\n      console.log(date_format_str);\r\n      const transactionObj1 = await contract.getUserData(userAddress,date_format_str);\r\n      const temp=await transactionObj1.wait();\r\n      const userData=temp.events[0].args._cid;\r\n      console.log(userData);\r\n      let urls = [];\r\n      let logs=[];\r\n      for(var i=0;i<userData.length;i++){\r\n        const stream = client.cat(userData[i].toString());\r\n        let data = [];\r\n\r\n        for await (const chunk of stream) {\r\n          data.push(chunk);\r\n        }\r\n\r\n        const blob = new Blob(data, { type: 'image/jpeg' });\r\n        const url = URL.createObjectURL(blob);\r\n        urls.push({ cid: userData[i], url: url });\r\n        const lastAccessor = await contract.getLastAccessor(userData[i].toString());\r\n        logs.push({ cid: userData[i], accessed_by:lastAccessor.user, time: lastAccessor.time,granted: lastAccessor.granted})\r\n    }\r\n    setFileUrls(urls);\r\n    setFileLogs(logs);\r\n    } catch (error) {\r\n      console.error('Error fetching file from IPFS:', error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Your Address\"\r\n        onChange={(e) => setUserAddress(e.target.value)}\r\n      />\r\n      \r\n      <button onClick={fetchFileFromIPFS}>Fetch Files from IPFS</button>\r\n      {fileUrls.map((file, index) => (\r\n        <div key={index}>\r\n          <p>CID: {file.cid}</p>\r\n          <a href={file.url} download>Download File</a>\r\n        </div>\r\n      ))}\r\n      {filelogs.map((file, index) => (\r\n        <div key={index}>\r\n          <p>CID: {file.cid}</p>\r\n          <p>LOG: {file.accessed_by}</p>\r\n          <p>LOG: {file.time}</p>\r\n          <p>LOG: {file.granted}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}