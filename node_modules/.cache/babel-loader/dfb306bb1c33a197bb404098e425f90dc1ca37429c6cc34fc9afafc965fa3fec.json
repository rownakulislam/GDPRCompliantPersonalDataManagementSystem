{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:\\thesis_project_start\\Ethereum-DappV2\\node_modules\\@libp2p\\interface\\src\\stream-handler\\index.ts"],"sourcesContent":["import type { Connection, Stream } from '../connection/index.js'\n\nexport interface IncomingStreamData {\n  stream: Stream\n  connection: Connection\n}\n\nexport interface StreamHandler {\n  (data: IncomingStreamData): void\n}\n\nexport interface StreamHandlerOptions {\n  /**\n   * How many incoming streams can be open for this protocol at the same time on each connection (default: 32)\n   */\n  maxInboundStreams?: number\n\n  /**\n   * How many outgoing streams can be open for this protocol at the same time on each connection (default: 64)\n   */\n  maxOutboundStreams?: number\n\n  /**\n   * Opt-in to running over a transient connection - one that has time/data limits\n   * placed on it.\n   */\n  runOnTransientConnection?: boolean\n}\n\nexport interface StreamHandlerRecord {\n  handler: StreamHandler\n  options: StreamHandlerOptions\n}\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}